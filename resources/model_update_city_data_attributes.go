/*
cities-svc API

API documentation for cities-svc

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package resources

import (
	"encoding/json"
)

// checks if the UpdateCityDataAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateCityDataAttributes{}

// UpdateCityDataAttributes struct for UpdateCityDataAttributes
type UpdateCityDataAttributes struct {
	Point *Point `json:"point,omitempty"`
	// city status
	Status *string `json:"status,omitempty"`
	// city name
	Name *string `json:"name,omitempty"`
	// city icon uri
	Icon *string `json:"icon,omitempty"`
	// city slug
	Slug *string `json:"slug,omitempty"`
	// city timezone
	Timezone *string `json:"timezone,omitempty"`
}

// NewUpdateCityDataAttributes instantiates a new UpdateCityDataAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateCityDataAttributes() *UpdateCityDataAttributes {
	this := UpdateCityDataAttributes{}
	return &this
}

// NewUpdateCityDataAttributesWithDefaults instantiates a new UpdateCityDataAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateCityDataAttributesWithDefaults() *UpdateCityDataAttributes {
	this := UpdateCityDataAttributes{}
	return &this
}

// GetPoint returns the Point field value if set, zero value otherwise.
func (o *UpdateCityDataAttributes) GetPoint() Point {
	if o == nil || IsNil(o.Point) {
		var ret Point
		return ret
	}
	return *o.Point
}

// GetPointOk returns a tuple with the Point field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCityDataAttributes) GetPointOk() (*Point, bool) {
	if o == nil || IsNil(o.Point) {
		return nil, false
	}
	return o.Point, true
}

// HasPoint returns a boolean if a field has been set.
func (o *UpdateCityDataAttributes) HasPoint() bool {
	if o != nil && !IsNil(o.Point) {
		return true
	}

	return false
}

// SetPoint gets a reference to the given Point and assigns it to the Point field.
func (o *UpdateCityDataAttributes) SetPoint(v Point) {
	o.Point = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *UpdateCityDataAttributes) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCityDataAttributes) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *UpdateCityDataAttributes) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *UpdateCityDataAttributes) SetStatus(v string) {
	o.Status = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateCityDataAttributes) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCityDataAttributes) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateCityDataAttributes) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateCityDataAttributes) SetName(v string) {
	o.Name = &v
}

// GetIcon returns the Icon field value if set, zero value otherwise.
func (o *UpdateCityDataAttributes) GetIcon() string {
	if o == nil || IsNil(o.Icon) {
		var ret string
		return ret
	}
	return *o.Icon
}

// GetIconOk returns a tuple with the Icon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCityDataAttributes) GetIconOk() (*string, bool) {
	if o == nil || IsNil(o.Icon) {
		return nil, false
	}
	return o.Icon, true
}

// HasIcon returns a boolean if a field has been set.
func (o *UpdateCityDataAttributes) HasIcon() bool {
	if o != nil && !IsNil(o.Icon) {
		return true
	}

	return false
}

// SetIcon gets a reference to the given string and assigns it to the Icon field.
func (o *UpdateCityDataAttributes) SetIcon(v string) {
	o.Icon = &v
}

// GetSlug returns the Slug field value if set, zero value otherwise.
func (o *UpdateCityDataAttributes) GetSlug() string {
	if o == nil || IsNil(o.Slug) {
		var ret string
		return ret
	}
	return *o.Slug
}

// GetSlugOk returns a tuple with the Slug field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCityDataAttributes) GetSlugOk() (*string, bool) {
	if o == nil || IsNil(o.Slug) {
		return nil, false
	}
	return o.Slug, true
}

// HasSlug returns a boolean if a field has been set.
func (o *UpdateCityDataAttributes) HasSlug() bool {
	if o != nil && !IsNil(o.Slug) {
		return true
	}

	return false
}

// SetSlug gets a reference to the given string and assigns it to the Slug field.
func (o *UpdateCityDataAttributes) SetSlug(v string) {
	o.Slug = &v
}

// GetTimezone returns the Timezone field value if set, zero value otherwise.
func (o *UpdateCityDataAttributes) GetTimezone() string {
	if o == nil || IsNil(o.Timezone) {
		var ret string
		return ret
	}
	return *o.Timezone
}

// GetTimezoneOk returns a tuple with the Timezone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCityDataAttributes) GetTimezoneOk() (*string, bool) {
	if o == nil || IsNil(o.Timezone) {
		return nil, false
	}
	return o.Timezone, true
}

// HasTimezone returns a boolean if a field has been set.
func (o *UpdateCityDataAttributes) HasTimezone() bool {
	if o != nil && !IsNil(o.Timezone) {
		return true
	}

	return false
}

// SetTimezone gets a reference to the given string and assigns it to the Timezone field.
func (o *UpdateCityDataAttributes) SetTimezone(v string) {
	o.Timezone = &v
}

func (o UpdateCityDataAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateCityDataAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Point) {
		toSerialize["point"] = o.Point
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Icon) {
		toSerialize["icon"] = o.Icon
	}
	if !IsNil(o.Slug) {
		toSerialize["slug"] = o.Slug
	}
	if !IsNil(o.Timezone) {
		toSerialize["timezone"] = o.Timezone
	}
	return toSerialize, nil
}

type NullableUpdateCityDataAttributes struct {
	value *UpdateCityDataAttributes
	isSet bool
}

func (v NullableUpdateCityDataAttributes) Get() *UpdateCityDataAttributes {
	return v.value
}

func (v *NullableUpdateCityDataAttributes) Set(val *UpdateCityDataAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateCityDataAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateCityDataAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateCityDataAttributes(val *UpdateCityDataAttributes) *NullableUpdateCityDataAttributes {
	return &NullableUpdateCityDataAttributes{value: val, isSet: true}
}

func (v NullableUpdateCityDataAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateCityDataAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


